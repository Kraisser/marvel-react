{"version":3,"file":"static/js/780.499b810a.chunk.js","mappings":"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","sources":["Components/buttonTriangle/ButtonTriangle.js","Components/errorBoundary/ErrorBoundary.js","Components/errorMessage/ErrorMessage.js","Components/characterPreInfo/CharacterPreInfo.js","Components/charactersList/CharactersList.js","Components/comics/Comics.js","Components/characterDescription/CharacterDescription.js","Components/searchChar/searchChar.js","Components/pages/MainPage.js","services/MarvelServices.js","hooks/http.hook.js","Components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import './buttonTriangle.css';\r\n\r\nexport default function ButtonTriangle(props) {\r\n\tconst {value, type, background, link, click, disabled} = props;\r\n\tconst classList = props.classList ? props.classList : '';\r\n\r\n\tconst innerContent = <div className={`marvel${background}Back`}>{value}</div>;\r\n\r\n\tconst content = {\r\n\t\tbutton: (\r\n\t\t\t<button\r\n\t\t\t\tonClick={click}\r\n\t\t\t\ttype={type ? type : null}\r\n\t\t\t\tclassName={`commonBut back${background} ${classList}`}>\r\n\t\t\t\t{innerContent}\r\n\t\t\t</button>\r\n\t\t),\r\n\t\tbutDisabled: (\r\n\t\t\t<button onClick={click} className={`commonBut back${background} ${classList}`} disabled>\r\n\t\t\t\t{innerContent}\r\n\t\t\t</button>\r\n\t\t),\r\n\t\tlink: (\r\n\t\t\t<a\r\n\t\t\t\thref={link}\r\n\t\t\t\ttarget='_blank'\r\n\t\t\t\trel='noreferrer'\r\n\t\t\t\tclassName={`commonBut back${background} ${classList}`}>\r\n\t\t\t\t{innerContent}\r\n\t\t\t</a>\r\n\t\t),\r\n\t};\r\n\r\n\tconst linkRender = link ? content.link : null;\r\n\tconst butDisRender = disabled ? content.butDisabled : null;\r\n\tconst butRender = !disabled && !link ? content.button : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{linkRender}\r\n\t\t\t{butRender}\r\n\t\t\t{butDisRender}\r\n\t\t</>\r\n\t);\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nexport default class ErrorBoundary extends Component{\r\n\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n    \r\n    return this.props.children\r\n  }\r\n}","import errorImg from './404Error.png';\r\n\r\nexport default function ErrorMessage() {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tsrc={errorImg}\r\n\t\t\talt='Error'\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '100%',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n","import './characterPreInfo.css';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport shieldAndHammer from '../../assets/shield and hammer.png';\r\n\r\nimport ButtonTriangle from '../buttonTriangle/ButtonTriangle';\r\n\r\nimport useMarvelService from '../../services/MarvelServices';\r\nimport setContent from '../../utils/setContent';\r\n\r\nexport default function CharacterPreInfo() {\r\n\tconst [char, setChar] = useState({});\r\n\r\n\tconst {getCharacter, clearErrors, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateChar();\r\n\t}, []);\r\n\r\n\tconst onLoadChar = (char) => {\r\n\t\tsetChar(char);\r\n\t};\r\n\r\n\tconst updateChar = () => {\r\n\t\tclearErrors();\r\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\r\n\t\tgetCharacter(id)\r\n\t\t\t.then(onLoadChar)\r\n\t\t\t.then(() => setProcess('success'));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='charPreinfoWrapper'>\r\n\t\t\t<div className='preInfoWrapper'>{setContent(process, View, char)}</div>\r\n\t\t\t<div className='randomCharacterWrapper'>\r\n\t\t\t\t<img src={shieldAndHammer} alt='shield and hammer' />\r\n\t\t\t\t<div className='randomCharacterContainer'>\r\n\t\t\t\t\t<p>Random character for today! Do you want to get to know him better?</p>\r\n\t\t\t\t\t<p>Or choose another one</p>\r\n\t\t\t\t\t<ButtonTriangle click={updateChar} value='try it' background='Red' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst View = ({data}) => {\r\n\tconst {name, description, thumbnail, homepage, wiki} = data;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img className='preInfoImg' src={thumbnail} alt={`${name}`} />\r\n\t\t\t<div className='preInfoContainer'>\r\n\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t<div className='preInfoDescriptionOverflow'>\r\n\t\t\t\t\t<p className='preInfoDescription'>{description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='preInfoLinkContainer'>\r\n\t\t\t\t\t<ButtonTriangle\r\n\t\t\t\t\t\tvalue='homepage'\r\n\t\t\t\t\t\tlink={homepage}\r\n\t\t\t\t\t\tclassList='preInfoBut'\r\n\t\t\t\t\t\tbackground='Red'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ButtonTriangle value='wiki' link={wiki} background='Grey' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import './charactersList.css';\r\nimport '../../utils/setContent.css';\r\n\r\nimport {useState, useEffect, useRef, useMemo} from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelServices';\r\nimport ButtonTriangle from '../buttonTriangle/ButtonTriangle';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nfunction setContent(process, Component, data) {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn (\r\n\t\t\t\t<div className='loadingWrapper'>\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\tcase 'loading':\r\n\t\t\treturn data.length > 0 ? (\r\n\t\t\t\t<Component />\r\n\t\t\t) : (\r\n\t\t\t\t<div className='loadingWrapper'>\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\tcase 'success':\r\n\t\t\treturn <Component data={data} />;\r\n\t\tcase 'error':\r\n\t\t\treturn <ErrorMessage />;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unexpected process state`);\r\n\t}\r\n}\r\n\r\nexport default function CharactersList(props) {\r\n\tconst {loading, setMaxChars, getAllCharacters, clearErrors, process, setProcess} =\r\n\t\tuseMarvelService();\r\n\r\n\tconst limit = 9;\r\n\r\n\tconst [chars, setChars] = useState([]);\r\n\tconst [offset, setOffset] = useState(0);\r\n\tconst [charEnded, setCharEnded] = useState(false);\r\n\tconst [maxCharsNum, setMaxCharsNum] = useState(limit + 1);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (chars.length === 0) {\r\n\t\t\tsetMaxChars()\r\n\t\t\t\t.then((maxChars) => setMaxCharsNum(maxChars))\r\n\t\t\t\t.then(() => onRequest(offset));\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst onRequest = (offset) => {\r\n\t\tclearErrors();\r\n\t\tgetAllCharacters(limit, offset)\r\n\t\t\t.then(onLoadChars)\r\n\t\t\t.then(() => setProcess('success'));\r\n\r\n\t\tsetOffset((offset) => offset + limit);\r\n\t};\r\n\r\n\tconst onUpdateChar = () => onRequest(offset + limit);\r\n\r\n\tconst onLoadChars = (newChars) => {\r\n\t\tconst charEnd = offset + limit >= maxCharsNum ? true : false;\r\n\r\n\t\tsetChars([...chars, ...newChars]);\r\n\t\tsetCharEnded(charEnd);\r\n\t};\r\n\r\n\tconst charsRef = useRef([]);\r\n\r\n\tconst onFocusChar = (i) => {\r\n\t\tcharsRef.current.forEach((item) => item.classList.remove(`charSelected`));\r\n\t\tcharsRef.current[i].classList.add(`charSelected`);\r\n\t\tcharsRef.current[i].focus();\r\n\t};\r\n\r\n\tconst render = (chars) => {\r\n\t\tconst items = chars.map((item, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\tclassName='charWrapper'\r\n\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\tref={(el) => (charsRef.current[i] = el)}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.onCharSelect(item.id);\r\n\t\t\t\t\t\tonFocusChar(i);\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} />\r\n\t\t\t\t\t<h3 className='characterHeader'>{item.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t};\r\n\r\n\tconst elements = useMemo(() => setContent(process, () => render(chars), chars), [process]);\r\n\r\n\treturn (\r\n\t\t<div className='charactersListWrapper'>\r\n\t\t\t<div className='charactersListContainer'>{elements}</div>\r\n\r\n\t\t\t<div className='longButContainer'>\r\n\t\t\t\t<ButtonTriangle\r\n\t\t\t\t\tvalue='load more'\r\n\t\t\t\t\tclick={onUpdateChar}\r\n\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\tbackground='Red'\r\n\t\t\t\t\tclassList={`longBut ${charEnded ? `hidden` : ''}`}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './comics.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Comics(props) {\r\n\tconst {name, link} = props;\r\n\tconst id = link.match(/[0-9]{1,}$/gm)[0];\r\n\r\n\treturn (\r\n\t\t<div className='comicsWrapper'>\r\n\t\t\t<Link to={`/comics/${id}`}>{name}</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './characterDescription.css';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport nextId from 'react-id-generator';\r\n\r\nimport useMarvelService from '../../services/MarvelServices';\r\nimport ButtonTriangle from '../buttonTriangle/ButtonTriangle';\r\nimport Comics from '../comics/Comics';\r\nimport setContent from '../../utils/setContent';\r\n\r\nexport default function CharactertDescription(props) {\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst {process, setProcess, getCharacter} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.charId) {\r\n\t\t\tgetCharacter(props.charId)\r\n\t\t\t\t.then((res) => setChar(res))\r\n\t\t\t\t.then(() => setProcess('success'));\r\n\t\t}\r\n\t}, [props.charId]);\r\n\r\n\treturn <div className='characterDescriptionMainWrapper'>{setContent(process, View, char)}</div>;\r\n}\r\n\r\nconst View = ({data}) => {\r\n\tconst {name, description, thumbnail, homepage, wiki, comics} = data;\r\n\r\n\tconst comicsItems = comics.map((item, index) => {\r\n\t\tif (index > 9) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn <Comics name={item.name} link={item.resourceURI} key={nextId()} />;\r\n\t});\r\n\r\n\tconst emptyComics = <div className='emptyComics'>No comics found</div>;\r\n\tconst comicsContent = comicsItems.length === 0 ? emptyComics : comicsItems;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='characterDescriptionWrapper'>\r\n\t\t\t\t<div className='characterDescriptionContainer'>\r\n\t\t\t\t\t<img src={thumbnail} alt={name} />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3 className='characterDescriptionHeader'>{name}</h3>\r\n\t\t\t\t\t\t<div className='characterDescriptionButsContainer'>\r\n\t\t\t\t\t\t\t<ButtonTriangle value='homepage' link={homepage} background='Red' />\r\n\t\t\t\t\t\t\t<ButtonTriangle value='wiki' link={wiki} background='Grey' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='comicsListWrapper'>\r\n\t\t\t\t<h4 className='comicsHeader'>Comics:</h4>\r\n\t\t\t\t<div className='comicsListContainer'>{comicsContent}</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import './searchChar.css';\r\n\r\nimport * as yup from 'yup';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport ButtonTriangle from '../buttonTriangle/ButtonTriangle';\r\nimport useMarvelService from '../../services/MarvelServices';\r\n\r\nfunction setContent(process, Component, data) {\r\n\tswitch (process) {\r\n\t\tcase 'success':\r\n\t\t\treturn <Component data={data} />;\r\n\t\tcase 'notFound':\r\n\t\t\treturn (\r\n\t\t\t\t<div className='errorChar'>The character was not found. Check the name and try again</div>\r\n\t\t\t);\r\n\t\tcase 'error':\r\n\t\t\treturn <div className='errorChar'>Error Fetching</div>;\r\n\t\tdefault:\r\n\t\t\treturn;\r\n\t}\r\n}\r\n\r\nexport default function SearchChar() {\r\n\tconst {loading, getCharacterByName, process, setProcess} = useMarvelService();\r\n\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst getChar = (name) => {\r\n\t\tgetCharacterByName(name)\r\n\t\t\t.then(onLoadChar)\r\n\t\t\t.then(() => setProcess(`success`))\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tif (e.message === 'Character not found') {\r\n\t\t\t\t\tsetProcess(`notFound`);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst onLoadChar = (char) => {\r\n\t\tsetChar(char);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='charSearchWrapper'>\r\n\t\t\t<h3 className='charSearchHeader'>Or find a character by name:</h3>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tcharName: '',\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={yup.object({\r\n\t\t\t\t\tcharName: yup.string().min(2, 'Too short name').required('Required field'),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={(values) => getChar(values.charName)}>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div className='charSearchForm'>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tclassName='charSearchInput'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='charName'\r\n\t\t\t\t\t\t\tid='charName'\r\n\t\t\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ButtonTriangle value='FIND' background='Red' disabled={loading} type='submit' />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ErrorMessage className='errorChar' component='div' name='charName' />\r\n\r\n\t\t\t\t\t{setContent(process, ViewChar, char)}\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ViewChar({data}) {\r\n\tconst {name, id} = data;\r\n\treturn (\r\n\t\t<div className='successCharWrapper'>\r\n\t\t\t<div className='successChar'>{`There is! Visit ${name} page?`}</div>\r\n\t\t\t<Link className='successChar' to={`/character/${id}`}>\r\n\t\t\t\t<ButtonTriangle value='TO PAGE' background='Grey' />\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import visionBg from '../../assets/visionBg.png';\r\n\r\nimport {useState} from 'react';\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\nimport CharacterPreInfo from '../characterPreInfo/CharacterPreInfo';\r\nimport CharactersList from '../charactersList/CharactersList';\r\nimport CharactertDescription from '../characterDescription/CharacterDescription';\r\nimport SearchChar from '../searchChar/searchChar';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nexport default function MainPage() {\r\n\tconst [charId, setCharId] = useState(null);\r\n\r\n\tconst onCharSelect = (id) => {\r\n\t\tsetCharId(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HelmetProvider>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<meta name='description' content='Marvel Database' />\r\n\t\t\t\t\t<title>Marvel Database</title>\r\n\t\t\t\t</Helmet>\r\n\t\t\t</HelmetProvider>\r\n\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<CharacterPreInfo />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className='flex-row mainContainer'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharactersList onCharSelect={onCharSelect} />\r\n\t\t\t\t</ErrorBoundary>\r\n\r\n\t\t\t\t<div className='rightMainContent'>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharactertDescription charId={charId} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<SearchChar />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img src={visionBg} className='visionBg' alt='vision bg' />\r\n\t\t</>\r\n\t);\r\n}\r\n","import {useHttp} from '../hooks/http.hook';\r\n\r\nexport default function useMarvelService() {\r\n\tconst {loading, process, setProcess, request, clearErrors} = useHttp();\r\n\r\n\tconst _baseUrl = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiBase = 'apikey=36f1abc750cc1a335225f4c72681de4e';\r\n\tconst _charOffset = 0;\r\n\tconst _comicsOffset = 0;\r\n\r\n\tconst setMaxChars = async () => {\r\n\t\tconst maxChars = await request(`${_baseUrl}characters?limit=1&${_apiBase}`);\r\n\r\n\t\treturn maxChars.data.total;\r\n\t};\r\n\r\n\tconst getAllCharacters = async (limit, offset = _charOffset) => {\r\n\t\tlet limilOption;\r\n\r\n\t\tif (limit || +limit || limit > 0 || limit <= 100) {\r\n\t\t\tlimilOption = `limit=${limit}`;\r\n\t\t}\r\n\r\n\t\tconst res = await request(`${_baseUrl}characters?${limilOption}&offset=${offset}&${_apiBase}`);\r\n\r\n\t\treturn res.data.results.map((item) => _transformCharData(item));\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_baseUrl}characters/${id}?${_apiBase}`);\r\n\r\n\t\treturn _transformCharData(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_baseUrl}characters?name=${name}&${_apiBase}`);\r\n\t\tconsole.log(res);\r\n\r\n\t\tif (res.data.results[0]) {\r\n\t\t\treturn _transformCharData(res.data.results[0]);\r\n\t\t}\r\n\r\n\t\tthrow new Error(`Character not found`);\r\n\t};\r\n\r\n\tconst getAllComics = async (limit, offset = _comicsOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_baseUrl}comics?issueNumber=0&offset=${offset}&limit=${limit}&${_apiBase}`\r\n\t\t);\r\n\r\n\t\treturn res.data.results.map((item) => _transformComicsData(item));\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_baseUrl}comics/${id}?${_apiBase}`);\r\n\r\n\t\treturn _transformComicsData(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharData = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tid: char.id,\r\n\t\t\tdescription: char.description ? char.description : 'No description',\r\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComicsData = (comics) => {\r\n\t\tconst {id, title, thumbnail, pageCount, description, prices, textObjects} = comics;\r\n\r\n\t\treturn {\r\n\t\t\tid: id,\r\n\t\t\ttitle: title,\r\n\t\t\tthumbnail: `${thumbnail.path}.${thumbnail.extension}`,\r\n\t\t\tpageCount: pageCount ? `${pageCount} pages` : 'No information about pages',\r\n\t\t\tdescription: description ? description : 'No description',\r\n\t\t\tlanguage: textObjects[0] ? textObjects[0].language : `no information`,\r\n\t\t\tprice: prices[0].price ? `${prices[0].price}$` : 'Not available',\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tclearErrors,\r\n\t\tsetMaxChars,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetCharacterByName,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n}\r\n","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetProcess('loading');\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Couldnt fetch (${url}), status: ${response.status}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = response.json();\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetProcess('error');\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst clearErrors = useCallback(() => {\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {loading, process, setProcess, request, clearErrors};\r\n};\r\n","import './skeleton.css';\r\n\r\nexport default function Skeleton(props) {\r\n  return (\r\n    <div className=\"skeletonWrapper\">\r\n      <h3 className=\"skeletonHeader\">Please select a character to see information</h3>\r\n      <div className=\"skeletonContainer\">\r\n        <div className=\"skeletonChar\">\r\n          <div className=\"skeletonRound\"></div>\r\n          <div className=\"skeletonEmptyHeader\"></div>\r\n        </div>\r\n        <div className=\"skeletonComics\"></div>\r\n        <div className=\"skeletonComics\"></div>\r\n        <div className=\"skeletonComics\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import Skeleton from '../Components/skeleton/Skeleton';\r\nimport Spinner from '../Components/spinner/Spinner';\r\nimport ErrorMessage from '../Components/errorMessage/ErrorMessage';\r\n\r\nexport default function setContent(process, Component, data) {\r\n\tswitch (process) {\r\n\t\tcase 'waiting':\r\n\t\t\treturn <Skeleton />;\r\n\t\tcase 'loading':\r\n\t\t\treturn <Spinner />;\r\n\t\tcase 'success':\r\n\t\t\treturn <Component data={data} />;\r\n\t\tcase 'error':\r\n\t\t\treturn <ErrorMessage />;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unexpected process state`);\r\n\t}\r\n}\r\n"],"names":["ButtonTriangle","props","value","type","background","link","click","disabled","classList","innerContent","className","content","button","onClick","butDisabled","href","target","rel","linkRender","butDisRender","butRender","ErrorBoundary","Component","state","error","componentDidCatch","this","setState","render","children","ErrorMessage","src","errorImg","alt","style","width","CharacterPreInfo","char","setChar","useState","getCharacter","clearErrors","process","setProcess","useMarvelService","useEffect","updateChar","onLoadChar","id","Math","floor","random","then","setContent","View","shieldAndHammer","data","name","description","thumbnail","homepage","wiki","CharactersList","loading","setMaxChars","getAllCharacters","chars","setChars","offset","setOffset","charEnded","setCharEnded","maxCharsNum","setMaxCharsNum","limit","length","maxChars","onRequest","onLoadChars","newChars","charEnd","charsRef","useRef","map","item","i","tabIndex","ref","el","current","onCharSelect","forEach","remove","add","focus","onFocusChar","elements","useMemo","Spinner","Error","Comics","match","to","CharactertDescription","charId","res","comics","comicsItems","index","resourceURI","nextId","emptyComics","comicsContent","SearchChar","getCharacterByName","initialValues","charName","validationSchema","yup","min","required","onSubmit","values","getChar","catch","e","message","placeholder","component","ViewChar","MainPage","setCharId","visionBg","request","setLoading","useCallback","async","url","method","body","headers","response","fetch","ok","status","json","useHttp","_baseUrl","_apiBase","_transformCharData","path","extension","urls","items","_transformComicsData","title","pageCount","prices","textObjects","language","price","total","limilOption","results","console","log","getAllComics","getComic","Skeleton"],"sourceRoot":""}