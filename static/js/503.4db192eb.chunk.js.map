{"version":3,"file":"static/js/503.4db192eb.chunk.js","mappings":"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","sources":["Components/comicsBanner/ComicBanner.js","Components/errorMessage/ErrorMessage.js","Components/pages/SingleContentPage.js","services/MarvelServices.js","hooks/http.hook.js"],"sourcesContent":["import './comicBanner.css';\r\n\r\nimport avengers from '../../assets/Avengers.png';\r\nimport avengersLogo from '../../assets/Avengers logo.png';\r\n\r\nexport default function ComicBanner() {\r\n\treturn (\r\n\t\t<div className='bannerWrapper'>\r\n\t\t\t<img src={avengers} alt='avengers' />\r\n\t\t\t<div className='bannerHeadersWrapper'>\r\n\t\t\t\t<h3 className='bannerHeader'>New comics Every week!</h3>\r\n\t\t\t\t<h3 className='bannerHeader'>Stay tuned!</h3>\r\n\t\t\t</div>\r\n\t\t\t<img src={avengersLogo} alt='avengersLogo' />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import errorImg from './404Error.png';\r\n\r\nexport default function ErrorMessage() {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tsrc={errorImg}\r\n\t\t\talt='Error'\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '100%',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n","import './SingleContentPage.css';\r\n\r\nimport {useState, useEffect} from 'react';\r\nimport {useParams, Link} from 'react-router-dom';\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelServices';\r\nimport ComicBanner from '../comicsBanner/ComicBanner';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nexport default function SingleContentPage(props) {\r\n\tconst {id} = useParams();\r\n\tconst [content, setContent] = useState(null);\r\n\tconst {loading, error, getComic, getCharacter, clearErrors} = useMarvelService();\r\n\tconst contentType = props.type;\r\n\r\n\tuseEffect(() => {\r\n\t\tswitch (contentType) {\r\n\t\t\tcase 'comic':\r\n\t\t\t\tupdateComic();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'char':\r\n\t\t\t\tupdateChar();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}, [id]);\r\n\r\n\tconst updateComic = () => {\r\n\t\tclearErrors();\r\n\r\n\t\tgetComic(id).then(onLoadContent);\r\n\t};\r\n\r\n\tconst updateChar = () => {\r\n\t\tclearErrors();\r\n\r\n\t\tgetCharacter(id).then(onLoadContent);\r\n\t};\r\n\r\n\tconst onLoadContent = (content) => {\r\n\t\tsetContent(content);\r\n\t};\r\n\r\n\tconst ViewComponent = contentType === 'char' ? ViewChar : ViewComic;\r\n\tconst renderContent = !loading && !error && content ? ViewComponent(content) : null;\r\n\tconst loadingContent = loading && !error ? <Spinner /> : null;\r\n\tconst errorContent = error ? <ErrorMessage /> : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ComicBanner />\r\n\t\t\t{renderContent}\r\n\t\t\t{loadingContent}\r\n\t\t\t{errorContent}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nfunction ViewComic(comic) {\r\n\tconst {thumbnail, title, price, description, pageCount, language} = comic;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HelmetProvider>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<meta name='description' content={`Marvel comic ${title} info`} />\r\n\t\t\t\t\t<title>{title}</title>\r\n\t\t\t\t</Helmet>\r\n\t\t\t</HelmetProvider>\r\n\r\n\t\t\t<div className='singleContentWrapper'>\r\n\t\t\t\t<img src={thumbnail} alt={title} />\r\n\t\t\t\t<div className='singleContentContainer'>\r\n\t\t\t\t\t<div className='contentDescriptionWrapper'>\r\n\t\t\t\t\t\t<h2>{title}</h2>\r\n\t\t\t\t\t\t<div className='contentInfo'>{description}</div>\r\n\t\t\t\t\t\t<div className='contentInfo'>{pageCount}</div>\r\n\t\t\t\t\t\t<div className='contentInfo'>Language: {language}</div>\r\n\t\t\t\t\t\t<div className='comicPrice marvelColor'>{price}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='comicBackLink'>\r\n\t\t\t\t\t\t<Link to='/comics'>Back to All</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nfunction ViewChar(char) {\r\n\tconst {thumbnail, name, description} = char;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HelmetProvider>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<meta name='description' content={`Marvel character ${name} info`} />\r\n\t\t\t\t\t<title>Character {name} info</title>\r\n\t\t\t\t</Helmet>\r\n\t\t\t</HelmetProvider>\r\n\r\n\t\t\t<div className='singleContentWrapper'>\r\n\t\t\t\t<img src={thumbnail} alt={name} />\r\n\t\t\t\t<div className='contentDescriptionWrapper'>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<div className='contentInfo'>{description}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import {useHttp} from '../hooks/http.hook';\r\n\r\nexport default function useMarvelService() {\r\n\tconst {loading, error, request, clearErrors} = useHttp();\r\n\r\n\tconst _baseUrl = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiBase = 'apikey=36f1abc750cc1a335225f4c72681de4e';\r\n\tconst _charOffset = 0;\r\n\tconst _comicsOffset = 0;\r\n\r\n\tconst setMaxChars = async () => {\r\n\t\tconst maxChars = await request(`${_baseUrl}characters?limit=1&${_apiBase}`);\r\n\r\n\t\treturn maxChars.data.total;\r\n\t};\r\n\r\n\tconst getAllCharacters = async (limit, offset = _charOffset) => {\r\n\t\tlet limilOption;\r\n\r\n\t\tif (limit || +limit || limit > 0 || limit <= 100) {\r\n\t\t\tlimilOption = `limit=${limit}`;\r\n\t\t}\r\n\r\n\t\tconst res = await request(`${_baseUrl}characters?${limilOption}&offset=${offset}&${_apiBase}`);\r\n\r\n\t\treturn res.data.results.map((item) => _transformCharData(item));\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_baseUrl}characters/${id}?${_apiBase}`);\r\n\r\n\t\treturn _transformCharData(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconsole.log(name);\r\n\t\tconst res = await request(`${_baseUrl}characters?name=${name}&${_apiBase}`);\r\n\r\n\t\tif (res.data.results[0]) {\r\n\t\t\treturn _transformCharData(res.data.results[0]);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst getAllComics = async (limit, offset = _comicsOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_baseUrl}comics?issueNumber=0&offset=${offset}&limit=${limit}&${_apiBase}`\r\n\t\t);\r\n\r\n\t\treturn res.data.results.map((item) => _transformComicsData(item));\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_baseUrl}comics/${id}?${_apiBase}`);\r\n\r\n\t\treturn _transformComicsData(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharData = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tid: char.id,\r\n\t\t\tdescription: char.description ? char.description : 'No description',\r\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComicsData = (comics) => {\r\n\t\tconst {id, title, thumbnail, pageCount, description, prices, textObjects} = comics;\r\n\r\n\t\treturn {\r\n\t\t\tid: id,\r\n\t\t\ttitle: title,\r\n\t\t\tthumbnail: `${thumbnail.path}.${thumbnail.extension}`,\r\n\t\t\tpageCount: pageCount ? `${pageCount} pages` : 'No information about pages',\r\n\t\t\tdescription: description ? description : 'No description',\r\n\t\t\tlanguage: textObjects[0] ? textObjects[0].language : `no information`,\r\n\t\t\tprice: prices[0].price ? `${prices[0].price}$` : 'Not available',\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tsetMaxChars,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetCharacterByName,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tclearErrors,\r\n\t};\r\n}\r\n","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Couldnt fetch (${url}), status: ${response.status}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = response.json();\r\n\r\n\t\t\t\tsetLoading(false);\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n  const clearErrors = useCallback(() => setError(null), []);\r\n  \r\n  return {loading, error, request, clearErrors};\r\n};\r\n"],"names":["ComicBanner","className","src","avengers","alt","avengersLogo","ErrorMessage","errorImg","style","width","SingleContentPage","props","id","useParams","content","setContent","useState","loading","error","getComic","getCharacter","clearErrors","useMarvelService","contentType","type","useEffect","updateComic","updateChar","then","onLoadContent","renderContent","ViewChar","ViewComic","loadingContent","Spinner","errorContent","comic","thumbnail","title","price","description","pageCount","language","name","to","char","request","setLoading","setError","useCallback","async","url","method","body","headers","response","fetch","ok","Error","status","data","json","e","message","useHttp","_baseUrl","_apiBase","_transformCharData","path","extension","homepage","urls","wiki","comics","items","_transformComicsData","prices","textObjects","setMaxChars","total","getAllCharacters","limit","limilOption","offset","res","results","map","item","getCharacterByName","console","log","getAllComics"],"sourceRoot":""}