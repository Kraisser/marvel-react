{"version":3,"file":"static/js/27.c2a47229.chunk.js","mappings":"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","sources":["Components/buttonTriangle/ButtonTriangle.js","Components/errorBoundary/ErrorBoundary.js","Components/errorMessage/ErrorMessage.js","Components/characterPreInfo/CharacterPreInfo.js","Components/character/Character.js","Components/charactersList/CharactersList.js","Components/comics/Comics.js","Components/skeleton/Skeleton.js","Components/characterDescription/CharacterDescription.js","Components/searchChar/searchChar.js","Components/pages/MainPage.js","services/MarvelServices.js","hooks/http.hook.js"],"sourcesContent":["import './buttonTriangle.css';\r\n\r\nexport default function ButtonTriangle(props) {\r\n\tconst {value, type, background, link, click, disabled} = props;\r\n\tconst classList = props.classList ? props.classList : '';\r\n\r\n\tconst innerContent = <div className={`marvel${background}Back`}>{value}</div>;\r\n\r\n\tconst content = {\r\n\t\tbutton: (\r\n\t\t\t<button\r\n\t\t\t\tonClick={click}\r\n\t\t\t\ttype={type ? type : null}\r\n\t\t\t\tclassName={`commonBut back${background} ${classList}`}>\r\n\t\t\t\t{innerContent}\r\n\t\t\t</button>\r\n\t\t),\r\n\t\tbutDisabled: (\r\n\t\t\t<button onClick={click} className={`commonBut back${background} ${classList}`} disabled>\r\n\t\t\t\t{innerContent}\r\n\t\t\t</button>\r\n\t\t),\r\n\t\tlink: (\r\n\t\t\t<a\r\n\t\t\t\thref={link}\r\n\t\t\t\ttarget='_blank'\r\n\t\t\t\trel='noreferrer'\r\n\t\t\t\tclassName={`commonBut back${background} ${classList}`}>\r\n\t\t\t\t{innerContent}\r\n\t\t\t</a>\r\n\t\t),\r\n\t};\r\n\r\n\tconst linkRender = link ? content.link : null;\r\n\tconst butDisRender = disabled ? content.butDisabled : null;\r\n\tconst butRender = !disabled && !link ? content.button : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{linkRender}\r\n\t\t\t{butRender}\r\n\t\t\t{butDisRender}\r\n\t\t</>\r\n\t);\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nexport default class ErrorBoundary extends Component{\r\n\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n    \r\n    return this.props.children\r\n  }\r\n}","import errorImg from './404Error.png';\r\n\r\nexport default function ErrorMessage() {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tsrc={errorImg}\r\n\t\t\talt='Error'\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: '100%',\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n","import './characterPreInfo.css';\r\n\r\nimport {useState, useEffect} from 'react';\r\nimport nextId from 'react-id-generator';\r\n\r\nimport shieldAndHammer from '../../assets/shield and hammer.png';\r\n\r\nimport ButtonTriangle from '../buttonTriangle/ButtonTriangle';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelServices';\r\n\r\nexport default function CharacterPreInfo() {\r\n\tconst [char, setChar] = useState({});\r\n\r\n\tconst {loading, error, getCharacter, clearErrors} = useMarvelService();\r\n\r\n\tconst troubleContent = {\r\n\t\terror: (\r\n\t\t\t<>\r\n\t\t\t\t<ErrorMessage />\r\n\t\t\t\t<h2>404</h2>\r\n\t\t\t</>\r\n\t\t),\r\n\t\tloading: (\r\n\t\t\t<>\r\n\t\t\t\t<Spinner key={nextId()} />\r\n\t\t\t\t<Spinner key={nextId()} />\r\n\t\t\t</>\r\n\t\t),\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateChar();\r\n\t}, []);\r\n\r\n\tconst onLoadChar = (char) => {\r\n\t\tsetChar(char);\r\n\t};\r\n\r\n\tconst updateChar = () => {\r\n\t\tclearErrors();\r\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\r\n\t\tgetCharacter(id).then(onLoadChar);\r\n\t};\r\n\r\n\tconst errorMessage = error ? troubleContent.error : null,\r\n\t\tloadingProcess = loading ? troubleContent.loading : null,\r\n\t\tcontent = error || loading ? null : View(char);\r\n\r\n\treturn (\r\n\t\t<div className='charPreinfoWrapper'>\r\n\t\t\t<div className='preInfoWrapper'>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t\t{loadingProcess}\r\n\t\t\t\t{content}\r\n\t\t\t</div>\r\n\t\t\t<div className='randomCharacterWrapper'>\r\n\t\t\t\t<img src={shieldAndHammer} alt='shield and hammer' />\r\n\t\t\t\t<div className='randomCharacterContainer'>\r\n\t\t\t\t\t<p>Random character for today! Do you want to get to know him better?</p>\r\n\t\t\t\t\t<p>Or choose another one</p>\r\n\t\t\t\t\t<ButtonTriangle click={updateChar} value='try it' background='Red' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst View = (char) => {\r\n\tconst {name, description, thumbnail, homepage, wiki} = char;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img className='preInfoImg' src={thumbnail} alt={`${name}`} />\r\n\t\t\t<div className='preInfoContainer'>\r\n\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t<div className='preInfoDescriptionOverflow'>\r\n\t\t\t\t\t<p className='preInfoDescription'>{description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='preInfoLinkContainer'>\r\n\t\t\t\t\t<ButtonTriangle\r\n\t\t\t\t\t\tvalue='homepage'\r\n\t\t\t\t\t\tlink={homepage}\r\n\t\t\t\t\t\tclassList='preInfoBut'\r\n\t\t\t\t\t\tbackground='Red'\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ButtonTriangle value='wiki' link={wiki} background='Grey' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import './character.css';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport {useRef} from 'react';\r\n\r\nexport default function Character(props) {\r\n\tconst {thumbnail, name, id, focus, onFocusChar} = props;\r\n\tconst nodeRef = useRef(null);\r\n\r\n\tconst focused = focus ? 'charSelected' : '';\r\n\r\n\treturn (\r\n\t\t<CSSTransition\r\n\t\t\ttimeout={300}\r\n\t\t\tin={!!id}\r\n\t\t\tnodeRef={nodeRef}\r\n\t\t\tclassNames='charWrapper-anim'\r\n\t\t\tappear={true}>\r\n\t\t\t<div\r\n\t\t\t\tref={nodeRef}\r\n\t\t\t\tclassName={`charWrapper ${focused}`}\r\n\t\t\t\ttabIndex='0'\r\n\t\t\t\tonClick={() => onFocusChar(id)}>\r\n\t\t\t\t<img src={thumbnail} alt={name} />\r\n\t\t\t\t<h3 className='characterHeader'>{name}</h3>\r\n\t\t\t</div>\r\n\t\t</CSSTransition>\r\n\t);\r\n}\r\n\r\nCharacter.propTypes = {\r\n\tid: PropTypes.number,\r\n\tonCharSelect: PropTypes.func,\r\n};\r\n","import './charactersList.css';\r\n\r\nimport {useState, useEffect} from 'react';\r\nimport nextId from 'react-id-generator';\r\n\r\nimport useMarvelService from '../../services/MarvelServices';\r\nimport Character from '../character/Character';\r\nimport ButtonTriangle from '../buttonTriangle/ButtonTriangle';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nexport default function CharactersList(props) {\r\n\tconst {loading, error, setMaxChars, getAllCharacters, clearErrors} = useMarvelService();\r\n\r\n\tconst limit = 9;\r\n\r\n\tconst [chars, setChars] = useState([]);\r\n\tconst [offset, setOffset] = useState(0);\r\n\tconst [charEnded, setCharEnded] = useState(false);\r\n\tconst [maxCharsNum, setMaxCharsNum] = useState(limit + 1);\r\n\tconst [focusCharId, setFocusCharId] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (chars.length === 0) {\r\n\t\t\tsetMaxChars().then((maxChars) => setMaxCharsNum(maxChars));\r\n\t\t\tonRequest(offset);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tfunction onFocusChar(id) {\r\n\t\tsetFocusCharId(id);\r\n\t\tsetChars(setCharList(chars));\r\n\r\n\t\tprops.onCharSelect(id);\r\n\t}\r\n\r\n\tconst setCharList = (res) =>\r\n\t\tres.map((item) => ({\r\n\t\t\tname: item.name,\r\n\t\t\tid: item.id,\r\n\t\t\tfocus: item.id === props.focusCharId ? true : false,\r\n\t\t\tthumbnail: item.thumbnail,\r\n\t\t\tkey: nextId(),\r\n\t\t}));\r\n\r\n\tconst onRequest = (offset) => {\r\n\t\tclearErrors();\r\n\t\tgetAllCharacters(limit, offset).then(onLoadChars);\r\n\r\n\t\tsetOffset((offset) => offset + limit);\r\n\t};\r\n\r\n\tconst onUpdateChar = () => onRequest(offset + limit);\r\n\r\n\tconst onLoadChars = (res) => {\r\n\t\tconst charEnd = offset + limit >= maxCharsNum ? true : false;\r\n\r\n\t\tconst newChars = setCharList(res);\r\n\r\n\t\tsetChars([...chars, ...newChars]);\r\n\t\tsetCharEnded(charEnd);\r\n\t};\r\n\r\n\tconst render = chars.map((item) => (\r\n\t\t<Character\r\n\t\t\tname={item.name}\r\n\t\t\tid={item.id}\r\n\t\t\tfocus={item.id === focusCharId ? true : false}\r\n\t\t\tthumbnail={item.thumbnail}\r\n\t\t\tonFocusChar={onFocusChar}\r\n\t\t\tkey={nextId()}\r\n\t\t/>\r\n\t));\r\n\r\n\tconst content = {\r\n\t\tloading: (\r\n\t\t\t<div className='loadingWrapper'>\r\n\t\t\t\t<Spinner key={nextId} />\r\n\t\t\t</div>\r\n\t\t),\r\n\t\terror: (\r\n\t\t\t<div className='loadingWrapper error'>\r\n\t\t\t\t<ErrorMessage />\r\n\t\t\t\t<h3>Error, try again</h3>\r\n\t\t\t</div>\r\n\t\t),\r\n\t};\r\n\r\n\tconst charsWrapper =\r\n\t\t(loading || error) && chars.length === 0 ? null : (\r\n\t\t\t<div className='charactersListContainer'>{render}</div>\r\n\t\t);\r\n\tconst loadingContent = loading ? content.loading : null;\r\n\tconst errorContent = error ? content.error : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='charactersListWrapper'>\r\n\t\t\t\t{errorContent}\r\n\t\t\t\t{charsWrapper}\r\n\t\t\t\t{loadingContent}\r\n\t\t\t\t<div className='longButContainer'>\r\n\t\t\t\t\t<ButtonTriangle\r\n\t\t\t\t\t\tvalue='load more'\r\n\t\t\t\t\t\tclick={onUpdateChar}\r\n\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\tbackground='Red'\r\n\t\t\t\t\t\tclassList={`longBut ${charEnded ? `hidden` : ''}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import './comics.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Comics(props) {\r\n\tconst {name, link} = props;\r\n\tconst id = link.match(/[0-9]{1,}$/gm)[0];\r\n\r\n\treturn (\r\n\t\t<div className='comicsWrapper'>\r\n\t\t\t<Link to={`/comics/${id}`}>{name}</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './skeleton.css';\r\n\r\nexport default function Skeleton(props) {\r\n  return (\r\n    <div className=\"skeletonWrapper\">\r\n      <h3 className=\"skeletonHeader\">Please select a character to see information</h3>\r\n      <div className=\"skeletonContainer\">\r\n        <div className=\"skeletonChar\">\r\n          <div className=\"skeletonRound\"></div>\r\n          <div className=\"skeletonEmptyHeader\"></div>\r\n        </div>\r\n        <div className=\"skeletonComics\"></div>\r\n        <div className=\"skeletonComics\"></div>\r\n        <div className=\"skeletonComics\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import './characterDescription.css';\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport nextId from 'react-id-generator';\r\n\r\nimport useMarvelService from '../../services/MarvelServices';\r\nimport ButtonTriangle from '../buttonTriangle/ButtonTriangle';\r\nimport Comics from '../comics/Comics';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nexport default function CharactertDescription(props) {\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst {loading, error, getCharacter} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.charId) {\r\n\t\t\tgetCharacter(props.charId).then((res) => setChar(res));\r\n\t\t}\r\n\t}, [props.charId]);\r\n\r\n\tconst skeleton = char || loading || error ? null : <Skeleton />,\r\n\t\terrorMessage = error ? <ErrorMessage /> : null,\r\n\t\tloadingProcess = loading ? <Spinner /> : null,\r\n\t\tcontent = error || loading || !char ? null : View(char);\r\n\r\n\treturn (\r\n\t\t<div className='characterDescriptionMainWrapper'>\r\n\t\t\t{skeleton}\r\n\t\t\t{errorMessage}\r\n\t\t\t{loadingProcess}\r\n\t\t\t{content}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst View = (char) => {\r\n\tconst {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\tconst comicsItems = comics.map((item, index) => {\r\n\t\tif (index > 9) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn <Comics name={item.name} link={item.resourceURI} key={nextId()} />;\r\n\t});\r\n\tconst emptyComics = <div className='emptyComics'>No comics found</div>;\r\n\tconst comicsContent = comicsItems.length === 0 ? emptyComics : comicsItems;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='characterDescriptionWrapper'>\r\n\t\t\t\t<div className='characterDescriptionContainer'>\r\n\t\t\t\t\t<img src={thumbnail} alt={name} />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3 className='characterDescriptionHeader'>{name}</h3>\r\n\t\t\t\t\t\t<div className='characterDescriptionButsContainer'>\r\n\t\t\t\t\t\t\t<ButtonTriangle value='homepage' link={homepage} background='Red' />\r\n\t\t\t\t\t\t\t<ButtonTriangle value='wiki' link={wiki} background='Grey' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>{description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='comicsListWrapper'>\r\n\t\t\t\t<h4 className='comicsHeader'>Comics:</h4>\r\n\t\t\t\t<div className='comicsListContainer'>{comicsContent}</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import './searchChar.css';\r\n\r\nimport * as yup from 'yup';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport ButtonTriangle from '../buttonTriangle/ButtonTriangle';\r\nimport useMarvelService from '../../services/MarvelServices';\r\n\r\nexport default function SearchChar() {\r\n\tconst {loading, getCharacterByName} = useMarvelService();\r\n\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst getChar = async (name) => {\r\n\t\tconst charData = await getCharacterByName(name);\r\n\r\n\t\tsetChar(charData);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='charSearchWrapper'>\r\n\t\t\t<h3 className='charSearchHeader'>Or find a character by name:</h3>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tcharName: '',\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={yup.object({\r\n\t\t\t\t\tcharName: yup.string().min(2, 'Too short name').required('Required field'),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={(values) => getChar(values.charName)}>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div className='charSearchForm'>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tclassName='charSearchInput'\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tname='charName'\r\n\t\t\t\t\t\t\tid='charName'\r\n\t\t\t\t\t\t\tplaceholder='Enter Name'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ButtonTriangle value='FIND' background='Red' disabled={loading} type='submit' />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<ErrorMessage className='errorChar' component='div' name='charName' />\r\n\r\n\t\t\t\t\t{char === null ? null : char === false ? (\r\n\t\t\t\t\t\t<div className='errorChar'>{`The character was not found. Check the name and try again`}</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className='successCharWrapper'>\r\n\t\t\t\t\t\t\t<div className='successChar'>{`There is! Visit ${char.name} page?`}</div>\r\n\t\t\t\t\t\t\t<Link className='successChar' to={`/character/${char.id}`}>\r\n\t\t\t\t\t\t\t\t<ButtonTriangle value='TO PAGE' background='Grey' />\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import visionBg from '../../assets/visionBg.png';\r\n\r\nimport {useState} from 'react';\r\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\r\n\r\nimport CharacterPreInfo from '../characterPreInfo/CharacterPreInfo';\r\nimport CharactersList from '../charactersList/CharactersList';\r\nimport CharactertDescription from '../characterDescription/CharacterDescription';\r\nimport SearchChar from '../searchChar/searchChar';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nexport default function MainPage() {\r\n\tconst [charId, setCharId] = useState(null);\r\n\r\n\tconst onCharSelect = (id) => {\r\n\t\tsetCharId(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HelmetProvider>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<meta name='description' content='Marvel Database' />\r\n\t\t\t\t\t<title>Marvel Database</title>\r\n\t\t\t\t</Helmet>\r\n\t\t\t</HelmetProvider>\r\n\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<CharacterPreInfo />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className='flex-row mainContainer'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharactersList onCharSelect={onCharSelect} />\r\n\t\t\t\t</ErrorBoundary>\r\n\r\n\t\t\t\t<div className='rightMainContent'>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharactertDescription charId={charId} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<SearchChar />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img src={visionBg} className='visionBg' alt='vision bg' />\r\n\t\t</>\r\n\t);\r\n}\r\n","import {useHttp} from '../hooks/http.hook';\r\n\r\nexport default function useMarvelService() {\r\n\tconst {loading, error, request, clearErrors} = useHttp();\r\n\r\n\tconst _baseUrl = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiBase = 'apikey=36f1abc750cc1a335225f4c72681de4e';\r\n\tconst _charOffset = 0;\r\n\tconst _comicsOffset = 0;\r\n\r\n\tconst setMaxChars = async () => {\r\n\t\tconst maxChars = await request(`${_baseUrl}characters?limit=1&${_apiBase}`);\r\n\r\n\t\treturn maxChars.data.total;\r\n\t};\r\n\r\n\tconst getAllCharacters = async (limit, offset = _charOffset) => {\r\n\t\tlet limilOption;\r\n\r\n\t\tif (limit || +limit || limit > 0 || limit <= 100) {\r\n\t\t\tlimilOption = `limit=${limit}`;\r\n\t\t}\r\n\r\n\t\tconst res = await request(`${_baseUrl}characters?${limilOption}&offset=${offset}&${_apiBase}`);\r\n\r\n\t\treturn res.data.results.map((item) => _transformCharData(item));\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_baseUrl}characters/${id}?${_apiBase}`);\r\n\r\n\t\treturn _transformCharData(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconsole.log(name);\r\n\t\tconst res = await request(`${_baseUrl}characters?name=${name}&${_apiBase}`);\r\n\r\n\t\tif (res.data.results[0]) {\r\n\t\t\treturn _transformCharData(res.data.results[0]);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\tconst getAllComics = async (limit, offset = _comicsOffset) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_baseUrl}comics?issueNumber=0&offset=${offset}&limit=${limit}&${_apiBase}`\r\n\t\t);\r\n\r\n\t\treturn res.data.results.map((item) => _transformComicsData(item));\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_baseUrl}comics/${id}?${_apiBase}`);\r\n\r\n\t\treturn _transformComicsData(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharData = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tid: char.id,\r\n\t\t\tdescription: char.description ? char.description : 'No description',\r\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComicsData = (comics) => {\r\n\t\tconst {id, title, thumbnail, pageCount, description, prices, textObjects} = comics;\r\n\r\n\t\treturn {\r\n\t\t\tid: id,\r\n\t\t\ttitle: title,\r\n\t\t\tthumbnail: `${thumbnail.path}.${thumbnail.extension}`,\r\n\t\t\tpageCount: pageCount ? `${pageCount} pages` : 'No information about pages',\r\n\t\t\tdescription: description ? description : 'No description',\r\n\t\t\tlanguage: textObjects[0] ? textObjects[0].language : `no information`,\r\n\t\t\tprice: prices[0].price ? `${prices[0].price}$` : 'Not available',\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tsetMaxChars,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetCharacterByName,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tclearErrors,\r\n\t};\r\n}\r\n","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(\r\n\t\tasync (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error(`Couldnt fetch (${url}), status: ${response.status}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = response.json();\r\n\r\n\t\t\t\tsetLoading(false);\r\n\r\n\t\t\t\treturn data;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t\tthrow e;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n  const clearErrors = useCallback(() => setError(null), []);\r\n  \r\n  return {loading, error, request, clearErrors};\r\n};\r\n"],"names":["ButtonTriangle","props","value","type","background","link","click","disabled","classList","innerContent","className","content","button","onClick","butDisabled","href","target","rel","linkRender","butDisRender","butRender","ErrorBoundary","Component","state","error","componentDidCatch","this","setState","render","children","ErrorMessage","src","errorImg","alt","style","width","CharacterPreInfo","char","setChar","useState","loading","getCharacter","clearErrors","useMarvelService","troubleContent","Spinner","nextId","useEffect","updateChar","onLoadChar","id","Math","floor","random","then","errorMessage","loadingProcess","View","shieldAndHammer","name","description","thumbnail","homepage","wiki","Character","focus","onFocusChar","nodeRef","useRef","focused","CSSTransition","timeout","in","classNames","appear","ref","tabIndex","CharactersList","setMaxChars","getAllCharacters","chars","setChars","offset","setOffset","charEnded","setCharEnded","maxCharsNum","setMaxCharsNum","limit","focusCharId","setFocusCharId","setCharList","onCharSelect","length","maxChars","onRequest","res","map","item","key","onLoadChars","charEnd","newChars","charsWrapper","loadingContent","errorContent","Comics","match","to","Skeleton","CharactertDescription","charId","skeleton","comics","comicsItems","index","resourceURI","emptyComics","comicsContent","SearchChar","getCharacterByName","initialValues","charName","validationSchema","yup","min","required","onSubmit","values","async","charData","getChar","placeholder","component","MainPage","setCharId","visionBg","request","setLoading","setError","useCallback","url","method","body","headers","response","fetch","ok","Error","status","data","json","e","message","useHttp","_baseUrl","_apiBase","_transformCharData","path","extension","urls","items","_transformComicsData","title","pageCount","prices","textObjects","language","price","total","limilOption","results","console","log","getAllComics","getComic"],"sourceRoot":""}